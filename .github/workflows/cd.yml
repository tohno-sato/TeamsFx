name: CD
run-name: CD-${{ github.run_id }}-${{ github.ref_name }}-${{ inputs.preid }}
on:
  workflow_dispatch:
    inputs:
      preid:
        description: "preid name(alpha, beta, rc, stable)"
        required: true
        default: "rc"
      skip-version-rc:
        description: "release RC version just with lerna publish, skip run lerna version(yes or no)"
        required: false
        default: "no"
      pkgs:
        type: string
        required: false
        description: "Please enter the package names you want to publish, such as cli, vscode, sdk, server and template. Please separate multiple entries with spaces"
  schedule:
    - cron: "0 0 * * *"

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Setup npm registry
        run: |
          echo "${{ secrets.NPMRC }}" > ~/.npmrc

      - name: Setup project
        run: |
          npm run setup
        env:
          REQUEST_TOKEN: ${{ secrets.CD_PAT }}

      - name: Setup git
        run: |
          git config --global user.name 'MSFT-yiz'
          git config --global user.email 'yiz@microsoft.com'

      - name: release alpha npm packages to npmjs.org
        run: |
          npx lerna version prerelease --preid=alpha.$(git rev-parse --short HEAD) --exact --no-push --allow-branch wenyt/test1 --no-git-tag-version --yes

      - name: version change
        id: version-change
        run: |
          echo "CHANGED=$(git tag --points-at HEAD | xargs)" >> $GITHUB_OUTPUT
          echo "TEMPLATE_VERSION=$(git tag --points-at HEAD | grep templates)" >> $GITHUB_OUTPUT
          echo "EXTENSION_VERSION_NUM=$(git tag --points-at HEAD | grep ms-teams-vscode-extension@ | cut -d '@' -f2)" >> $GITHUB_OUTPUT
          echo "EXTENSION_VERSION=$(git tag --points-at HEAD | grep ms-teams-vscode-extension@)" >> $GITHUB_OUTPUT
          echo "SERVER_VERSION_NUM=$(git tag --points-at HEAD | grep @microsoft/teamsfx-server@ | cut -d '@' -f3)" >> $GITHUB_OUTPUT
          echo "SERVER_VERSION=$(git tag --points-at HEAD| grep @microsoft/teamsfx-server@)" >> $GITHUB_OUTPUT
          echo "SIMPLEAUTH_VERSION=$(git tag --points-at HEAD | grep simpleauth)" >> $GITHUB_OUTPUT
          echo "SIMPLEAUTH_VERSION_NUM=$(git tag --points-at HEAD| grep simpleauth| cut -d '@' -f2)" >> $GITHUB_OUTPUT
          if git tag --points-at HEAD | grep templates | grep rc;
          then
              git push -d origin $(git tag --points-at HEAD | grep templates | grep rc)
          fi

      - name: generate templates v3
        run: |
          .github/scripts/template-zip-autogen-v3.sh $TEMPLATE_PATH
          cd ./packages/fx-core
          rm -rf ./templates/fallback
          node ./scripts/download-templates-zip.js
        env:
          TEMPLATE_PATH: ${{ runner.temp }}/teamsfx_templates_v3

      - name: publish alpha release to npm org
        run: |
          npx lerna publish from-package --dist-tag=alpha --yes --allow-branch dev
        env:
          TEMPLATE_PATH: ${{ runner.temp }}/teamsfx_templates_v3

      - name: pack vsix
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          command: |
            sleep 20
            cd ./packages/vscode-extension
            npm install --only=production
            npx vsce package

      - name: save release info
        run: |
          rm -f changed.txt
          rm -f versions.json
          echo ${{steps.version-change.outputs.CHANGED}} > changed.txt
          npx lerna ls -all --json > versions.json
          find ./packages/vscode-extension -type f -name '*.vsix' -exec mv {} . \;

      - name: upload release info to artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: |
            changed.txt
            versions.json
            *.vsix